<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ari.blumenthal.dev</title>
  <link href="https://ari.blumenthal.dev/" />
  <link href="https://ari.blumenthal.dev/rss" rel="self" />
  <updated>2025-01-21T05:11:48.870Z</updated>
  <author>
    <name>Ari Blumenthal</name>
  </author>
  <id>https://ari.blumenthal.dev/rss</id>
  <entry>
    <title>p90x.</title>
    <link href="https://ari.blumenthal.dev/!/2/-6/p90x"/>
    <id>https://ari.blumenthal.dev/!/2/-6/p90x</id>
    <updated>2025-01-20T12:34:56Z</updated>
    <content type="html">&lt;p&gt;If our society seems more nihilistic than that of previous eras, perhaps this is simply a sign of our maturity as a sentient species. As our collective consciousness expands beyond a crucial point, we are at last ready to accept life's fundamental truth: that life's only purpose is life itself. -- Chairman Sheng-ji Yang, "Looking God in the Eye"&lt;/p&gt;&lt;p&gt;14 years&lt;/p&gt;&lt;p&gt;of watching Tony Horton tell me to do my best and forget the rest.&lt;/p&gt;&lt;p&gt;In 2011, I'd graduated college and moved out to California with a few boxes and a duffel bag. After living on my own a bit realized, "Yeah, guess I should probably work out".&lt;/p&gt;&lt;p&gt;But this was the tail end of the era of dvds. Netflix had some streaming options, but not everything was available there yet. I had to wait for episodes of Dexter to show up in the mail one disc at a time.&lt;/p&gt;&lt;p&gt;So I bought the p90x dvds. And now in 2025, I've forgotten how many times I've stopped and started and just pushed play.&lt;/p&gt;&lt;p&gt;Sometimes I complete all 90 days, sometimes I don't. Sometimes I stream the workouts, sometimes I put the dvds in a PS3 or PS4.&lt;/p&gt;&lt;p&gt;But once again, today is day one.&lt;/p&gt;&lt;p&gt;MLM&lt;/p&gt;&lt;p&gt;I can't write something positive about Tony and p90x without the Beachbody caveat. Their content is good. Great. Shaun T, Vytas, and others have created a lot of fun, engaging workouts and programs.&lt;/p&gt;&lt;p&gt;But beachbody has historically had some very questionable practices like their MLM business model. Although thank goodness, it seems they finally ended it a few weeks ago.&lt;/p&gt;&lt;p&gt;Midnight workouts&lt;/p&gt;&lt;p&gt;Back in 2015 (and then again in 2018), a small group of us had a bet with the following rules:&lt;/p&gt;&lt;p&gt;Every time a daily workout is missed, you must put $5 into the pot. You cannot do a workout until all previous workouts have been completed. First person to finish 90 days wins the entire pot. If multiple people finish the same day, the pot is split. X Stretch is not required (but recommended) on “Rest or X Stretch” days.&lt;/p&gt;&lt;p&gt;Those were definitely the p90x runs where I most consistently worked out.&lt;/p&gt;&lt;p&gt;Reddit&lt;/p&gt;&lt;p&gt;I had an alt I hardly used named u/greenbeansoup. Although, I rarely go on reddit at all anymore after the API changes in 2023 (that's around the time I dropped my main handle from the about me page on this blog).&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>artifacts.</title>
    <link href="https://ari.blumenthal.dev/!/2/-7/artifacts"/>
    <id>https://ari.blumenthal.dev/!/2/-7/artifacts</id>
    <updated>2024-12-30T12:34:56Z</updated>
    <content type="html">&lt;p&gt;Superior training and superior weaponry have, when taken together, a geometric effect on overall military strength. Well-trained, well-equipped troops can stand up to many more times their lesser brethren than linear arithmetic would seem to indicate. -- Spartan Battle Manual&lt;/p&gt;&lt;p&gt;Not the valve one.&lt;/p&gt;&lt;p&gt;After playing spacetraders a few months ago, I've once again found myself playing an API game. In Artifacts, you're automating characters in an mmorpg.&lt;/p&gt;&lt;p&gt;Last time around I wrote everything in JS to go fast, but wished I'd tried out something new. This time around, I went with Rust.&lt;/p&gt;&lt;p&gt;I haven't used any languages with memory management since C/C++ at university, so actually thinking about the stack and heap and reference counting and all that was an interesting change of pace.&lt;/p&gt;&lt;p&gt;For some definition of interesting. Was that a &amp;str or a String that I wanted? Read the book. I don't remember what blog I found it on, but a few days into using Rust, I read a comment like "you can't just jump into using Rust, you have to read the book". Whoops, I guess. Personas. My implementation for artifacts is pretty similar to what I'd done for spacetraders with personas I could attach to my characters, but just a different set of tasks. Usually characters stuck to a specific persona, but sometimes I would have them all do the same one overnight (e.g. to get a bunch of resources or level up). The ones I ended up settling on were: The Crafter persona to make weapons, gear, or jewelry. The Gatherer persona to chop wood and mine ore. The Fighter persona for characters to farm individual monsters or tasks coins. The Angler persona to fish and cook. At one point I also had a Chicken Chaser that just battled chickens. Rust positives. As a fan of Optional introduced recently in Java 8 (okay so I guess 2014 isn't considered recent anymore, but at least that isn't as old as that chicken chaser reference (Fable came out in 2004) and I did have a coworker whose license plate was JAVA 8, but that's unrelated) as a way of making code more explicit and readable, Rust's Option is pretty handy as well. Result is handy for similar reasons. Spinning up and coordinating multiple threads was super painless. If something went wrong with one of them during the night, the other characters could still do their thing. loop {} is rad. Grabbing code from other crates was relatively straightforward. I used chrono (for dealing with time stuff), reqwest (for making the API calls), and serde (for handling json). Error messages during compilation are excellent. No notes. For someone totally new to the language, they provided great starting points for learning more. Skies. My five characters are named after protagonists from Skies of Arcadia, the best RPG ever made (when wearing my particular set of nostalgia goggles): Vyse, Aika, Fina, Enrique, and Drachma. It is surprising that in ~2 years of doing this blog I haven't written anything about that game yet. Guess I have to replay it in 2025. Home Journal Prev Next&lt;/p&gt;&lt;p&gt;Read the book.&lt;/p&gt;&lt;p&gt;I don't remember what blog I found it on, but a few days into using Rust, I read a comment like "you can't just jump into using Rust, you have to read the book". Whoops, I guess.&lt;/p&gt;&lt;p&gt;Personas.&lt;/p&gt;&lt;p&gt;My implementation for artifacts is pretty similar to what I'd done for spacetraders with personas I could attach to my characters, but just a different set of tasks. Usually characters stuck to a specific persona, but sometimes I would have them all do the same one overnight (e.g. to get a bunch of resources or level up). The ones I ended up settling on were:&lt;/p&gt;&lt;p&gt;The Crafter persona to make weapons, gear, or jewelry.&lt;/p&gt;&lt;p&gt;The Gatherer persona to chop wood and mine ore.&lt;/p&gt;&lt;p&gt;The Fighter persona for characters to farm individual monsters or tasks coins.&lt;/p&gt;&lt;p&gt;The Angler persona to fish and cook.&lt;/p&gt;&lt;p&gt;Rust positives.&lt;/p&gt;&lt;p&gt;As a fan of Optional introduced recently in Java 8 (okay so I guess 2014 isn't considered recent anymore, but at least that isn't as old as that chicken chaser reference (Fable came out in 2004) and I did have a coworker whose license plate was JAVA 8, but that's unrelated) as a way of making code more explicit and readable, Rust's Option is pretty handy as well. Result is handy for similar reasons.&lt;/p&gt;&lt;p&gt;Spinning up and coordinating multiple threads was super painless. If something went wrong with one of them during the night, the other characters could still do their thing.&lt;/p&gt;&lt;p&gt;loop {} is rad.&lt;/p&gt;&lt;p&gt;Grabbing code from other crates was relatively straightforward. I used chrono (for dealing with time stuff), reqwest (for making the API calls), and serde (for handling json).&lt;/p&gt;&lt;p&gt;Error messages during compilation are excellent. No notes. For someone totally new to the language, they provided great starting points for learning more.&lt;/p&gt;&lt;p&gt;Skies.&lt;/p&gt;&lt;p&gt;My five characters are named after protagonists from Skies of Arcadia, the best RPG ever made (when wearing my particular set of nostalgia goggles): Vyse, Aika, Fina, Enrique, and Drachma.&lt;/p&gt;&lt;p&gt;It is surprising that in ~2 years of doing this blog I haven't written anything about that game yet. Guess I have to replay it in 2025.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>magic.</title>
    <link href="https://ari.blumenthal.dev/!/3/-7/magic"/>
    <id>https://ari.blumenthal.dev/!/3/-7/magic</id>
    <updated>2024-11-09T12:34:56Z</updated>
    <content type="html">&lt;p&gt;Urza and the Kor&lt;/p&gt;&lt;p&gt;My foray into magic began with the Call of the Kor deck from Stronghold (1998).&lt;/p&gt;&lt;p&gt;However, when I think of my personal magic nostalgia, the picture in my head is of the Lightning Dragon on the cover of those Urza's Saga tournament packs.&lt;/p&gt;&lt;p&gt;Of the cards I own from this generation, some of my favorites were Memory Jar, Rancor, and Deranged Hermit from Urza's Legacy (1999).&lt;/p&gt;&lt;p&gt;On again, off again&lt;/p&gt;&lt;p&gt;Magic as a hobby came and went. There were sets I drafted with my friends again and again like Mirrodin (2003), Champions of Kamigawa (2004), and Ravnica: City of Guilds (2005).&lt;/p&gt;&lt;p&gt;And sets I missed entirely.&lt;/p&gt;&lt;p&gt;While I mostly drafted, I do remember buying singles to get a set of Wellwisher and Llanowar Elves to build an elf deck around Voice of the Woods from Onslaught (2002).&lt;/p&gt;&lt;p&gt;Of the cards I own from this generation, some of my favorites were Isamaru, Hound of Konda from Kamigawa, Skyknight Legionnaire from Ravnica, and Sarkhan Vol from Shards of Alara (2008).&lt;/p&gt;&lt;p&gt;Duels&lt;/p&gt;&lt;p&gt;I briefly played Magic Duels in 2015, but gave up fairly quickly.&lt;/p&gt;&lt;p&gt;I posted on reddit about an issue with deck size limits (but never heard from the devs for that bug report).&lt;/p&gt;&lt;p&gt;Arena&lt;/p&gt;&lt;p&gt;I played a bit of arena a few years ago. There were two decks I built that I remember really enjoying.&lt;/p&gt;&lt;p&gt;The first was a Brushfire Elemental deck (Zendikar Rising, 2020) that used those landfall creatures to try and win the game quickly (and a few Goldspan Dragons (Kaldheim, 2021) to finish the job.&lt;/p&gt;&lt;p&gt;The other was an Archon of Sun's Grace deck (Theros Beyond Death, 2020) that used enchantments to make a bunch of pegasuses (pegasi?).&lt;/p&gt;&lt;p&gt;Intrigue and Critters&lt;/p&gt;&lt;p&gt;This year, I've found myself playing paper magic again, first with the preconstructed Murders at Karlov Manor commander decks and then drafting Bloomburrow and Foundations.&lt;/p&gt;&lt;p&gt;I absolutely love that full art lands have made a strong resurgence in recent sets. So many cool options, from the Phyrexia: All Will Be One lands in the Phyrexian language and the unique art style of the Kamigawa: Neon Dynasty lands to the stained glass Dominaria United lands, the stellar Theros Beyond Death lands, and the negative space Outlaws of Thunder Junction lands.&lt;/p&gt;&lt;p&gt;Of this generation, I've in general enjoyed the art and theme of Bloomburrow, but my runaway favorite card is the Mabel, Heir to Cragflame I drafted.&lt;/p&gt;&lt;p&gt;Final Fantasy x Magic&lt;/p&gt;&lt;p&gt;Another on again, off again game I've played over the years are the various iterations of Final Fantasy (e.g. see me previously trying to replay FFXV in the 2022 epilogue before my son was born (spoiler, he got here 2 weeks early) and looking forward to Dawntrail earlier this year (spoiler, it was great)).&lt;/p&gt;&lt;p&gt;So it's no wonder I'm excited for the upcoming collaboration between these two franchises next year. I can't wait to build a chocobo or moogle deck.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>spacetraders.</title>
    <link href="https://ari.blumenthal.dev/!/3/-8/spacetraders"/>
    <id>https://ari.blumenthal.dev/!/3/-8/spacetraders</id>
    <updated>2024-08-17T12:34:56Z</updated>
    <content type="html">&lt;p&gt;And so we return again to the holy void. Some say this is simply our destiny, but I would have you remember always that the void EXISTS, just as surely as you or I. Is nothingness any less a miracle than substance? -- Sister Miriam Godwinson "We Must Dissent"&lt;/p&gt;&lt;p&gt;Spacetraders is a "space-themed economic game with HTTP endpoints for automating gameplay and building custom tools." It's had me hooked during the evenings the last couple weeks in a "just one more turn" sort of way.&lt;/p&gt;&lt;p&gt;UI&lt;/p&gt;&lt;p&gt;I kicked off with a minimal web frontend to explore the mechanics of the game. Specifically, I built three pages to get started:&lt;/p&gt;&lt;p&gt;A market UI where I could see all the waypoints with markets and what goods they were importing and exporting.&lt;/p&gt;&lt;p&gt;A fleet UI where I could see the status of my ships, have them mine an asteroid, refuel as needed, transfer cargo to other ships, or fly around the system.&lt;/p&gt;&lt;p&gt;An rpc builder UI where I could hit arbitrary endpoints to fill the gaps for things that I hadn't added in my other pages (buying ships, handling contracts, etc).&lt;/p&gt;&lt;p&gt;Automation&lt;/p&gt;&lt;p&gt;Once I got the hang of the intro mechanics to the game, I started building some basic automation. This was done with a nodejs server that tells the fleet what to do.&lt;/p&gt;&lt;p&gt;Each ship is given a persona that assigns it an event loop which contains a sequence of actions to repeat indefinitely. I currently have five personas in use:&lt;/p&gt;&lt;p&gt;The Hauler persona (for my freighters) which has them fly to an asteroid, load from other ships until their inventory is full, and sell their cargo at a nearby market.&lt;/p&gt;&lt;p&gt;The Miner persona (for my drones) which has them fly to an asteroid and mine whenever they have cargo space.&lt;/p&gt;&lt;p&gt;The Pricer persona (for my probes) which has them fly in a loop around the different markets and stores the prices of goods in a postgres db. This uses a naïve nearest neighbor algorithm for generating the route.&lt;/p&gt;&lt;p&gt;The Trader persona (for my frigate) which has it find the most profitable good in the system, pick it up at one waypoint and sell it at another.&lt;/p&gt;&lt;p&gt;The NOOP persona for ships I have stationed at a particular waypoint (e.g. so I can buy ships at its shipyard, etc).&lt;/p&gt;&lt;p&gt;Current Status&lt;/p&gt;&lt;p&gt;The game is an alpha, so the server resets every ~3 weeks. The last reset was on 2024-08-11 (I started playing a little before then) and my handle for this reset is ZAKHAROV.&lt;/p&gt;&lt;p&gt;At time of writing, I have ~1.5 million credits which puts me 14th on the leaderboard for this reset (mind you there are very likely more players that have more credits than me if you include the cost of their ships (and 1st is currently at ~500 million, so there is that)).&lt;/p&gt;&lt;p&gt;My fleet consists of 21 ships: 1 frigate, 4 probes, 1 shuttle, 3 freighters, and 12 drones.&lt;/p&gt;&lt;p&gt;What's Next&lt;/p&gt;&lt;p&gt;There are several directions I could go from here. Some ideas in no particular order:&lt;/p&gt;&lt;p&gt;Add ship information to my DB and build a live visualization of where all my ships are at any given time. Add a queueing server between my API calls and the game server, to avoid hitting the dreaded "You have reached your API limit" errors. Explore more mechanics of the game (visiting other system, market dynamics, etc). Port my codebase to another language. I built this out quickly using JS, but it could be fun to try out Rust or Elixir or something well suited to this sort of project.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>university.</title>
    <link href="https://ari.blumenthal.dev/!/3/-9/university"/>
    <id>https://ari.blumenthal.dev/!/3/-9/university</id>
    <updated>2024-06-16T12:34:56Z</updated>
    <content type="html">&lt;p&gt;There are two kinds of scientific progress: the methodical experimentation and categorization which gradually extend the boundaries of knowledge, and the revolutionary leap of genius which redefines and transcends those boundaries. Acknowledging our debt to the former, we yearn nonetheless for the latter. -- Academician Prokhor Zakharov "Address to the Faculty"&lt;/p&gt;&lt;p&gt;Prelude&lt;/p&gt;&lt;p&gt;While digging through some files, I found my college transcript from — looks at calendar — 13 years ago and thought it might be fun to jot down some recollections.&lt;/p&gt;&lt;p&gt;Transfer&lt;/p&gt;&lt;p&gt;I took a few AP tests in high school and got out of intro chemistry and calculus freshman year. It's still interesting that after a decade or so of school before university, a handful of transfer credits from AP tests are the only things that carry over.&lt;/p&gt;&lt;p&gt;Fall 07&lt;/p&gt;&lt;p&gt;I actually started off as a mechanical engineering major, hence taking ME 170. It was cool to play around with CAD for a semester, but ultimately not what I wanted to do.&lt;/p&gt;&lt;p&gt;My AP physics score wasn't high enough and I didn't pass the exam to get credit for multivariable calculus, so even though I took both PHYS 211 and MATH 241 in high school, I had to take them again freshman year.&lt;/p&gt;&lt;p&gt;Spring 08&lt;/p&gt;&lt;p&gt;After quickly deciding to switch to a CS major, I had to take CS 125 and CS 173 before the program would let me officially transfer in. Which is so much easier than today, since you're apparently no longer allowed to move into the CS program from within the university.&lt;/p&gt;&lt;p&gt;Fall 08&lt;/p&gt;&lt;p&gt;Learning data structures in CS 225 was one of the top two most important software dev classes I took. Useful for day to day coding fundamentals (and passing interviews).&lt;/p&gt;&lt;p&gt;Spring 09&lt;/p&gt;&lt;p&gt;CS 460 was pretty neat, we read articles like Smashing The Stack For Fun And Profit and then implemented them in the computer lab.&lt;/p&gt;&lt;p&gt;Fall 09&lt;/p&gt;&lt;p&gt;I remember putting a certain penny arcade comic in a presentation for my CS 210 ethics class. Got a good score on it, but the teacher wasn't fond of the cursing.&lt;/p&gt;&lt;p&gt;Hands down, my favorite class at university was CS 242. This class had a weekly programming assignment that you could solve in any number of ways, but you would have to present your solution to a small group of other students and a TA. This meant you saw the different ways that everyone in your group approached the same problem.&lt;/p&gt;&lt;p&gt;Some weeks, the assignment would build up off of the previous week's work (without you knowing ahead of time), so if you wrote clean code, you'd be better off than if you quickly hacked something together and left yourself with a bunch of techdebt.&lt;/p&gt;&lt;p&gt;Probably the closest class in college to actually having a software job.&lt;/p&gt;&lt;p&gt;Spring 10&lt;/p&gt;&lt;p&gt;Along with data structures, CS 473 is the other of the top two most important software dev classes. I still recommend Erickson's algorithms textbook as a canonical reference for learning or reviewing this topic.&lt;/p&gt;&lt;p&gt;When a student asked if dancing would be on the final exam, the answer was yes! We got a final where every question was about dancing.&lt;/p&gt;&lt;p&gt;Fall 10&lt;/p&gt;&lt;p&gt;During my last year of college, I had to finish up some gen eds and decided to start taking some extra math classes like MATH 417 for fun.&lt;/p&gt;&lt;p&gt;CS 598 with LaValle was a super interesting dive into relevant research papers (and the only grad-level course I've taken).&lt;/p&gt;&lt;p&gt;Spring 11&lt;/p&gt;&lt;p&gt;My senior thesis for CS 499 was A primer on covering spaces for robot exploration, which was essentially a variation of the art gallery problem.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>looking forward.</title>
    <link href="https://ari.blumenthal.dev/!/2/-9/looking-forward"/>
    <id>https://ari.blumenthal.dev/!/2/-9/looking-forward</id>
    <updated>2024-06-07T12:34:56Z</updated>
    <content type="html">&lt;p&gt;I&lt;/p&gt;&lt;p&gt;The fifth ffxiv expansion, Dawntrail, releases in exactly three weeks on June 28 and I'm excited to continue the adventure. It will be interesting to see how the dynamics between the Scions plays out on opposite sides of the political struggle over in Tural and Wuk Lamat seems like a great addition to the cast.&lt;/p&gt;&lt;p&gt;If there isn't a battle on that big bridge between the northern and southern regions, I will be sorely disappointed.&lt;/p&gt;&lt;p&gt;II&lt;/p&gt;&lt;p&gt;I have one book left in The Murderbot Diaries series by Martha Wells after which I'll be caught up (until the next three come out). The titular character's relatable perspective on this dystopian universe has been entertaining to read, what with Murderbot's growth as a person, their relationships with ART, Ratthi, Mensah and the rest of their crew, and all the various adventures, missions, and whodunits.&lt;/p&gt;&lt;p&gt;It also looks like there will be a TV adaption of the books expected to release later this year, about which I'm fairly optimistic. Although with Murderbot processing so many things in parallel, it will be interesting to see how it translates to this medium.&lt;/p&gt;&lt;p&gt;III&lt;/p&gt;&lt;p&gt;I tried out the Ultracube mod a few weeks ago, but the weekly friday facts for Factorio really have me excitedly waiting for the next expansion that might be releasing later this year.&lt;/p&gt;&lt;p&gt;The fff-414 details earlier today about resources spoiling on Gleba have me cautiously optimistic, since it's a mechanic that penalizes my habit of frequently buffering materials on my bases.&lt;/p&gt;&lt;p&gt;The music in fff-406 is amazing. A lot of my spotify history is whatever game soundtrack I'm listening to in the background while coding (FFXIV, Frostpunk, Octopath Traveler, etc) and this looks to be a strong addition. (The rest of my history is my kid's playlists.)&lt;/p&gt;&lt;p&gt;I have such a huge amount of respect for the factorio devs. It is obvious how much love and polish they put into the game and I can't imagine this expansion will be any exception.&lt;/p&gt;&lt;p&gt;IV&lt;/p&gt;&lt;p&gt;After writing the first three sections of this journal entry, I looked up out of curiosity if there had been any news on when Civ 7 was coming out, and lo and behold, it was accidentally announced earlier today! (It has since been formally announced for 2025.)&lt;/p&gt;&lt;p&gt;With previous Civ games releasing in 1991 (I), 1996 (II), 2001 (III), 2005 (IV), 2010 (V), 2016 (VI), this 9 year gap will have been the longest between major releases.&lt;/p&gt;&lt;p&gt;Last year I launched roze, a discord bot for tracking turns for multiplayer Civ 6 games. She is now a verified bot in over 100 servers, which is pretty exciting (and required me to do some extra data retention cleanups and introduce a terms of service). If they don't include built-in support for something similar in Civ 7, I'll try and get roze up and running pretty quickly after launch.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>zoom.</title>
    <link href="https://ari.blumenthal.dev/!/2/-8/zoom"/>
    <id>https://ari.blumenthal.dev/!/2/-8/zoom</id>
    <updated>2024-06-02T12:34:56Z</updated>
    <content type="html">&lt;p&gt;If you're on desktop, you can now zoom in and out on the grid with the [ and ] keys.&lt;/p&gt;&lt;p&gt;I'd previously toyed with animations that would zoom in and out when navigating far distances on the grid, but never settled on one that I liked. This feature takes inspiration from that, letting you just zoom in and out as you please.&lt;/p&gt;&lt;p&gt;At 3 levels of zoom, the performance of the page is a little janky, but not so bad that I want to do further rendering improvements (above and beyond the switch from position offsets to css transforms in this commit).&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>feed.</title>
    <link href="https://ari.blumenthal.dev/!/1/-8/feed"/>
    <id>https://ari.blumenthal.dev/!/1/-8/feed</id>
    <updated>2024-05-05T12:34:56Z</updated>
    <content type="html">&lt;p&gt;I've added an rss feed to the site. Well, not actually. Everyone calls it an rss feed, but when digging into it, the recommended choice in 2024 for the fast-moving technical domain of metadata syndication is Atom, defined in rfc 4287.&lt;/p&gt;&lt;p&gt;It's auto-generated using the same scripts I use for generating this hilbert curve journal itself, so it should stay up to date with the latest 20 entries.&lt;/p&gt;&lt;p&gt;And at least at time of writing this entry, it is a valid Atom 1.0 feed.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>godot.</title>
    <link href="https://ari.blumenthal.dev/!/1/-9/godot"/>
    <id>https://ari.blumenthal.dev/!/1/-9/godot</id>
    <updated>2024-04-10T12:34:56Z</updated>
    <content type="html">&lt;p&gt;I&lt;/p&gt;&lt;p&gt;I started to play around with the Godot game engine a few days ago, since I have some ideas for games I'd like to make. Whether or not any of them come to fruition is still tbd, but I decided to give it a go to see what comes of it.&lt;/p&gt;&lt;p&gt;I searched a little bit about each of the major engines these days (godot, unity, unreal, etc) and for the sort of 2D games I'd be working on (and the positive feedback from developers that use it), Godot 4.2 with GDScript seemed like a pretty good fit to try out.&lt;/p&gt;&lt;p&gt;To learn the basics, I did the intro "dodge the creeps" game in their docs and then tasked myself with implementing solitaire. Not trivial, but not super complex either.&lt;/p&gt;&lt;p&gt;II&lt;/p&gt;&lt;p&gt;This isn't my first foray into game development. Twice before I've made a few simple games.&lt;/p&gt;&lt;p&gt;As a kid, I learned Visual Basic and used that for assorted projects. One was a game where a box would jump around the screen and you had to click it to progress.&lt;/p&gt;&lt;p&gt;Later in high school, I took an intro class that I vaguely recall had me make some game in Java to learn OOP, but I can't recall offhand anymore what it entailed.&lt;/p&gt;&lt;p&gt;III&lt;/p&gt;&lt;p&gt;So I got the solitaire game working.&lt;/p&gt;&lt;p&gt;And then I remembered, I don't really like solitaire.&lt;/p&gt;&lt;p&gt;I prefer freecell.&lt;/p&gt;&lt;p&gt;IV&lt;/p&gt;&lt;p&gt;Most of the programming was pretty straightforward and provided a good opportunity to learn the Godot UI, GDScript syntax and all that.&lt;/p&gt;&lt;p&gt;There was an interesting issue I ran into around handling a click event that overlapped with multiple Area2D nodes (e.g. when dragging a card that was on top of another draggable card). I originally used the input event signals, but I had no way of figuring out which one should handle the event (no deterministic order I could figure out as to which node triggered first or to prevent propagation).&lt;/p&gt;&lt;p&gt;I eventually stumbled upon the intersect_point function I could use to get a list of everything that overlapped with the click and filter that by z-index to get the node I wanted.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>kotlin.</title>
    <link href="https://ari.blumenthal.dev/!/0/-9/kotlin"/>
    <id>https://ari.blumenthal.dev/!/0/-9/kotlin</id>
    <updated>2024-03-21T12:34:56Z</updated>
    <content type="html">&lt;p&gt;I started coding in Kotlin for a project recently and have mostly enjoyed its philosophy and syntax. But I wanted to try and articulate my thoughts on extension functions because I'm not sure yet if I like them or hate them.&lt;/p&gt;&lt;p&gt;Other languages have supported extension methods for years, but most projects I've worked on have been in languages without support (or at least without idiomatic usage).&lt;/p&gt;&lt;p&gt;The super quick overview is that they let you add methods directly on classes that can be imported independently of the original code. Read the docs linked above for a better description.&lt;/p&gt;&lt;p&gt;I think I instinctively hated them, because coming from something like javascript where this would be done via modifying the prototype, you have no guarantees that you aren't clobbering some other code on the page. Or with something like dependency injection where your framework makes data available for you, but it isn't always easy to know where things are coming from without decent tooling or prior knowledge of the codebase.&lt;/p&gt;&lt;p&gt;But neither of these are concerns in Kotlin. Handling for extension functions occurs at compile time, so you don't have the same concerns around breaking other parts of the codebase. And extensions are imported so its easy to find where they source from.&lt;/p&gt;&lt;p&gt;I guess there is a worry that a poorly organized codebase could become even more cumbersome to work with if past authors scattered different parts of an object around incomprehensibly. But this seems like it would be easy enough to reconcile and reason through.&lt;/p&gt;&lt;p&gt;On the flip side, I like the syntactic sugar it brings and the simplicity of adding utility functions on top of core functionality that I don't own.&lt;/p&gt;&lt;p&gt;So I guess it's just the change aversion that comes with learning something new. They'll probably grow on me as I learn all the shiny new best practices that make use of them.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>dst.</title>
    <link href="https://ari.blumenthal.dev/!/0/-8/dst"/>
    <id>https://ari.blumenthal.dev/!/0/-8/dst</id>
    <updated>2024-03-15T12:34:56Z</updated>
    <content type="html">&lt;p&gt;Some thoughts on daylight savings time.&lt;/p&gt;&lt;p&gt;I&lt;/p&gt;&lt;p&gt;A few weeks ago, my one year old and I dug through a storage bin in the basement and found my old lime green gameboy color, with batteries that were decades old and just a little juice left. Contained within, a cartridge of pokémon gold ready to play.&lt;/p&gt;&lt;p&gt;Starting a new game and listening to some 8-bit music, we pretty quickly got to the question: "Is it Daylight Saving Time now?"&lt;/p&gt;&lt;p&gt;I didn't know the answer back when I first loaded up the game as a kid and nearly 25 years later, honestly? I can still never remember which half of the year is DST.&lt;/p&gt;&lt;p&gt;II&lt;/p&gt;&lt;p&gt;So fun new thing as a dad of a 1yo: this is the first year where spring forward was the good one.&lt;/p&gt;&lt;p&gt;Usually fall back gives the extra hour of sleep, but the clock isn’t the deciding factor of when I wake up anymore. My kid is. So spring forward gave me the extra hour of sleep.&lt;/p&gt;&lt;p&gt;More or less.&lt;/p&gt;&lt;p&gt;III&lt;/p&gt;&lt;p&gt;Consider pitching the concept of DST today if it didn't already exist. Everyone once a year decides to move the clock one hour forward, and then six months later, we reverse it and move the clock one hour back. It's unimaginable.&lt;/p&gt;&lt;p&gt;Nobody would agree to it. So how did we get here?&lt;/p&gt;&lt;p&gt;Well in the US, it started in March of 1918 with the Standard Time Act which followed similar changes in Europe during WWI. The library of congress has some fun newspaper articles available online from the time.&lt;/p&gt;&lt;p&gt;IV&lt;/p&gt;&lt;p&gt;In 2018, Prop 7 passed when I was in California, showing a positive sentiment towards getting rid of this twice-a-year nonsense. But, that prop didn't actually implement the change, just the ability for a change to happen in the future.&lt;/p&gt;&lt;p&gt;So is there any hope of change? Right now, with the Uniform Time Act of 1966, states can decide to have permanent standard time (an hour back), but cannot have permanent DST (an hour forward). The only states with year-round standard time today are Hawaii and Arizona.&lt;/p&gt;&lt;p&gt;In 2022, the Sunshine Protection Act proposed permanent DST at a federal level, but after passing in the Senate, it never made it to the House. Newer iterations of this bill have been suggested, but nothing has come of it yet. There is also the open question of whether year-round standard time or DST time is better, for some definition of better.&lt;/p&gt;&lt;p&gt;V&lt;/p&gt;&lt;p&gt;I don't have a specific story I can think of offhand, but I agree with xkcd/2867 so very much.&lt;/p&gt;&lt;p&gt;Leap second bugs, timezone bugs, dst bugs, browser time vs server time, on and on.&lt;/p&gt;&lt;p&gt;Any part of a software project dealing with datetimes makes me a little extra cautious.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>chromostereopsis.</title>
    <link href="https://ari.blumenthal.dev/!/0/-7/chromostereopsis"/>
    <id>https://ari.blumenthal.dev/!/0/-7/chromostereopsis</id>
    <updated>2024-03-05T12:34:56Z</updated>
    <content type="html">&lt;p&gt;I ran into this by accident when playing around with styles for my site awhile back. Turns out this specific optical illusion is more pronounced for near-sighted individuals when wearing glasses. An oddly specific super-power.&lt;/p&gt;&lt;p&gt;Here's an example:&lt;/p&gt;&lt;p&gt;If you don't see the illusion, the red parts seemingly jump out of the screen, and the blue parts are sunken further back. If you search around on the internet, there are tons of cool examples that people have made running with this technique.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>cookbook.lol.</title>
    <link href="https://ari.blumenthal.dev/!/1/-7/cookbook.lol"/>
    <id>https://ari.blumenthal.dev/!/1/-7/cookbook.lol</id>
    <updated>2024-02-12T12:34:56Z</updated>
    <content type="html">&lt;p&gt;I put together a minimal website over at cookbook.lol to start storing my recipes. This is the start of the cookbookbook idea from project ideas i.&lt;/p&gt;&lt;p&gt;It does a couple cool things:&lt;/p&gt;&lt;p&gt;You can track when recipes are variations of other recipes (either on the site or from a blog or cookbook) It has some basic organization (tracking saved/tried recipes) It has support for basic comment threads.&lt;/p&gt;&lt;p&gt;It is definitely missing a lot of features and there’s tons more I want to do here, but the core functionality is there.&lt;/p&gt;&lt;p&gt;If you're reading this and you want an invite, just shoot me an email.&lt;/p&gt;&lt;p&gt;Design Overview&lt;/p&gt;&lt;p&gt;There is an existing nginx instance running for this blog which routes traffic to new local frontend and backend servers. In the future, we can split one or both of these out into their own instances.&lt;/p&gt;&lt;p&gt;The frontend serves all requests to cookbook.lol. These requests are served by a nodejs server that renders a bunch of closure (aka soy) templates.&lt;/p&gt;&lt;p&gt;The backend server is a minimal (mostly aip.dev style resource-oriented) API implemented in nodejs with postgresql for storage.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>birds.</title>
    <link href="https://ari.blumenthal.dev/!/1/-6/birds"/>
    <id>https://ari.blumenthal.dev/!/1/-6/birds</id>
    <updated>2023-09-23T12:34:56Z</updated>
    <content type="html">&lt;p&gt;With the addition of the 🐦‍🔥 emoji in Unicode v15.1, it occurred to me that Unicode has a lot of birds.&lt;/p&gt;&lt;p&gt;This post contains a history of every bird added to the unicode spec. And to answer the age old question, which came first the 🐔 or the 🥚, the chicken was added in Unicode v6.0, but the egg wasn't added until v9.0.&lt;/p&gt;&lt;p&gt;Standard Bird Emoji&lt;/p&gt;&lt;p&gt;[1F413] 🐓 - Rooster (v6.0) [1F414] 🐔 - Chicken (v6.0) [1F423] 🐣 - Hatching chick (v6.0) [1F424] 🐤 - Baby chick (v6.0) [1F425] 🐥 - Front-facing baby chick (v6.0) [1F426] 🐦 - Bird (v6.0) [1F427] 🐧 - Penguin (v6.0) [1F54A] 🕊️ - Dove of peace (v7.0) [1F983] 🦃 - Turkey (v8.0) [1F985] 🦅 - Eagle (v9.0) [1F986] 🦆 - Duck (v9.0) [1F989] 🦉 - Owl (v9.0) [1F99A] 🦚 - Peacock (v11.0) [1F99C] 🦜 - Parrot (v11.0) [1F9A2] 🦢 - Swan (v11.0) [1F9A4] 🦤 - Dodo (v13.0) [1F9A9] 🦩 - Flamingo (v12.0) [1FABF] 🪿 - Goose (v15.0)&lt;/p&gt;&lt;p&gt;Modified Bird Emoji&lt;/p&gt;&lt;p&gt;This list has customizations of bird emoji that can be done using the 200D Zero Width Joiner.&lt;/p&gt;&lt;p&gt;[1F426 200D 2B1B] 🐦‍⬛ - Black bird (v15.0) [1F426 200D 1F525] 🐦‍🔥 - Phoenix (v15.1)&lt;/p&gt;&lt;p&gt;Bird Adjacent Emoji&lt;/p&gt;&lt;p&gt;[1F357] 🍗 - Poultry leg (v6.0) [1F595] 🖕 - Middle finger (v7.0) [1F3F8] 🏸 - Badminton (v8.0) [1F95A] 🥚 - Egg (v9.0) [1FAB6] 🪶 - Feather (v13.0) [1FAB9] 🪹 - Empty nest (v14.0) [1FABA] 🪺 - Nest with eggs (v14.0) [1FABD] 🪽 - Wing (v15.0)&lt;/p&gt;&lt;p&gt;Bird Flag Emoji&lt;/p&gt;&lt;p&gt;🇦🇱 - [AL] Albania (Eagle) 🇦🇸 - [AS] American Samoa (Eagle) 🇧🇱 - [BL] St. Barthélemy (Pelican) 🇨🇽 - [CX] Christmas Island (Tropicbird) 🇩🇲 - [DM] Dominica (Parrot) 🇪🇨 - [EC] Ecuador (Condor) 🇪🇬 - [EG] Egypt (Eagle) 🇫🇯 - [FJ] Fiji (Dove) 🇬🇸 - [GS] South Georgia &amp; South Sandwich Islands (Penguin) 🇬🇹 - [GT] Guatemala (Quetzal) 🇰🇮 - [KI] Kiribati (Frigatebird) 🇰🇿 - [KZ] Kazakhstan (Eagle) 🇲🇩 - [MD] Moldova (Eagle) 🇲🇪 - [ME] Montenegro (Eagle) 🇲🇽 - [MX] Mexico (Eagle) 🇵🇬 - [PG] Papua New Guinea (Bird of paradise) 🇷🇸 - [RS] Serbia (Eagle) 🇸🇭 - [SH] St. Helena (Plover) 🇸🇽 - [SX] Sint Maarten (Pelican) 🇹🇦 - [TA] Tristan da Cunha (Albatross) 🇺🇬 - [UG] Uganda (Crane) 🇻🇮 - [VI] U.S. Virgin Islands (Eagle) 🇿🇲 - [ZM] Zambia (Eagle) 🇿🇼 - [ZW] Zimbabwe (Bateleur)&lt;/p&gt;&lt;p&gt;Egyptian Bird Hieroglyphs&lt;/p&gt;&lt;p&gt;NOTE(2024-03-03): Looks like Unicode 16 is adding nearly ~4000 more Egyptian Hieroglyphs including hundreds more birds. Awesome.&lt;/p&gt;&lt;p&gt;Other Unicode Birds&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>project ideas i.</title>
    <link href="https://ari.blumenthal.dev/!/0/-6/project-ideas-i"/>
    <id>https://ari.blumenthal.dev/!/0/-6/project-ideas-i</id>
    <updated>2023-07-30T12:34:56Z</updated>
    <content type="html">&lt;p&gt;I've got a bunch of random ideas for projects in my notes. Here are a few of the more interesting ones.&lt;/p&gt;&lt;p&gt;Cookbookbook&lt;/p&gt;&lt;p&gt;Cookbookbook would be a "social" website for recipes. I know there are millions of cooking websites out there already (I even briefly had a food blog ~10 years ago).&lt;/p&gt;&lt;p&gt;But searching, collecting, and sharing recipes is an awful user experience today. Really, I want something web-based and text-focused like HN or Tildes but for recipes.&lt;/p&gt;&lt;p&gt;Cracking the coding interview for kids.&lt;/p&gt;&lt;p&gt;As a new dad, I've gotten to read a lot of really fun kids books. I thought it might be cool to try and make one which takes concepts from coding interview prep like leetcode or cracking the coding interview, and turns it into bite-size books that kids can still enjoy while parents learn something new! Not sure if this is an amazing idea or some sort of SF tech bro dystopian one.&lt;/p&gt;&lt;p&gt;TypeWriterScript&lt;/p&gt;&lt;p&gt;It took my longer than I care to admit to remember what I meant by TypeWriterScript in my notes.&lt;/p&gt;&lt;p&gt;I think that the idea here was writing a language that could compile to TS that looks like this:&lt;/p&gt;&lt;p&gt;The idea here is that the documentation (either in plaintext or markdown maybe) and the code are one in the same, but written with the docs being any unindented lines. The indented lines would be valid TS.&lt;/p&gt;&lt;p&gt;Essentially, I could write a blog post that is perfectly valid TypeWriterScript.&lt;/p&gt;&lt;p&gt;Sherwalk Holmes&lt;/p&gt;&lt;p&gt;Credit for the name on this one goes to my amazing wife.&lt;/p&gt;&lt;p&gt;This would be a mobile game that uses your daily step count to solve Sherlock Holmes mysteries. Your step count would be used to power Holmes traveling around London getting clues to solve the crimes (so you can play at home or wherever).&lt;/p&gt;&lt;p&gt;Anyways, that's it for ideas for now.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>euchre.</title>
    <link href="https://ari.blumenthal.dev/!/0/-5/euchre"/>
    <id>https://ari.blumenthal.dev/!/0/-5/euchre</id>
    <updated>2023-06-24T12:34:56Z</updated>
    <content type="html">&lt;p&gt;Busy couple of months. Went back to work, moved near family, and the kid is almost 8 months old.&lt;/p&gt;&lt;p&gt;In honor of returning to the Midwest, here are the rules I documented a few years ago for three-handed euchre:&lt;/p&gt;&lt;p&gt;3 handed Euchre Rules aka cutthroat euchre&lt;/p&gt;&lt;p&gt;The game starts with all 3 players at 20 points and is played over a sequence of rounds using a deck with 10,J,Q,K,A of every suit and the 9 of clubs. The goal of the game is to be the first to get to 0 points.&lt;/p&gt;&lt;p&gt;Each round is played as follows. The dealer deals 4 hands of 5 cards (1 to each player and 1 face down) and flips the remaining card face up. Starting left of the dealer and moving clockwise, players will decide if they want the dealer to pick it up and move the card into their hand and discard back down to 5 cards.&lt;/p&gt;&lt;p&gt;If a player chooses for the dealer to draw that card, that is now the trump suit for the hand. If no player calls it up, the card is flipped over and you go around the table in the same order picking one of the remaining 3 suits. The dealer will be the last to pick and is required to pick a suit (this is the screw the dealer variation in the original Euchre, that I've always played with in cutthroat).&lt;/p&gt;&lt;p&gt;Starting with the dealer and going clockwise, each player can decide if they want to stay , drop , or take the other hand (if the dealer did not take the extra hand). If they stay, they will play with their current hand. If they drop, they will not take part in the round. If they take the other hand, they must play the current round with the hand that was face down. Note that they are playing with that hand sight unseen; they can't look ahead of time.&lt;/p&gt;&lt;p&gt;All remaining players will play the hand with standard Euchre rules (Jack of the chosen trump suit is highest, Jack of the opposite suit but same color is second highest, trump beats nontrump, high beats low, etc). Each trick taken is worth -1 point to your score. Taking 0 tricks is worth +5 points. If you called a suit (or told the dealer to pick the card up) you must take at least 3 tricks, or the hand is worth +5 points (and you get no points for the tricks you took).&lt;/p&gt;&lt;p&gt;Scoring Example 1: 3 players are playing in the first round; Ari dealt the hand and Chad had Ari pick the 10 of clubs up. Ari and Greg both stayed and ended up taking 1 trick each, Chad took 3 tricks. So Ari and Greg are both at 19 and Chad is at 17&lt;/p&gt;&lt;p&gt;Scoring Example 2: 1 player is playing in the first round. Ari and Chad both dropped and Greg was the only one who stayed in. Greg takes all 5 tricks and is at 15.&lt;/p&gt;&lt;p&gt;Scoring Example 3: 2 players are playing in the first round. Ari called a suit, Chad stayed in, and Greg dropped. Ari only took 2 tricks, and Chad took the remaining 3, so Ari is now at 25 and Chad is at 17.&lt;/p&gt;&lt;p&gt;There are 3 remaining special rules:&lt;/p&gt;&lt;p&gt;9 of clubs round: When the 9 of clubs is the face up card on the table, the bidding is skipped. Nobody draws the 9 of clubs, nobody can switch hands, clubs are immediately the trump suit, everybody must play, and everybody needs to take 1 trick to avoid getting 5 points (nobody is required to take 3 tricks)&lt;/p&gt;&lt;p&gt;9 of clubs trump: 9 of clubs is always the lowest trump card, no matter which suit is trump.&lt;/p&gt;&lt;p&gt;5 points rule: At the start of the hand, if you're at 5 points or less, you may no longer drop.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>three body problem.</title>
    <link href="https://ari.blumenthal.dev/!/0/-4/three-body-problem"/>
    <id>https://ari.blumenthal.dev/!/0/-4/three-body-problem</id>
    <updated>2023-02-24T12:34:56Z</updated>
    <content type="html">&lt;p&gt;I finished reading The Three-Body Problem earlier today, and decided to throw together a quick simulation over at three body simulation.&lt;/p&gt;&lt;p&gt;It kinda works, but mostly it just let me know how rusty my math and physics knowledge has gotten after not using it for 10+ years.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>css: color.</title>
    <link href="https://ari.blumenthal.dev/!/1/-4/css-color"/>
    <id>https://ari.blumenthal.dev/!/1/-4/css-color</id>
    <updated>2023-01-28T12:34:56Z</updated>
    <content type="html">&lt;p&gt;Suppose we wanted a blue block:&lt;/p&gt;&lt;p&gt;How would you specify its color in CSS? Well, let's start by rolling the clock back to 1996. Independence Day started airing in theaters, Game Freak launched Pokemon Red and Blue, Sid Meier released Civ II, and W3C published the first specification for CSS.&lt;/p&gt;&lt;p&gt;Cascading Style Sheets, Level 1&lt;/p&gt;&lt;p&gt;Per the CSS1 specs, we could write this using a color name, such as background: blue. The 16 original named colors are black, silver, gray, white, maroon, red, purple, fuchsia, green, lime, olive, yellow, navy, blue, teal, and aqua.&lt;/p&gt;&lt;p&gt;But folks typically want to use more than a few predefined colors. Well, you can also specify one of the ~16.7 million colors in the sRGB color space, which allows defining a color by its red, green, and blue channels. Instead of using the named color, you can use one of the following:&lt;/p&gt;&lt;p&gt;background: #00f - a 3-digit hex code background: #0000ff - a 6-digit hex code background: rgb(0, 0, 255) - an integer rgb() value (from 0 to 255) background: rgb(0%, 0%, 100%) - a float rgb() from 0.0% to 100.0%&lt;/p&gt;&lt;p&gt;Cascading Style Sheets, Level 2&lt;/p&gt;&lt;p&gt;The CSS2 and CSS2.1 standards didn't change too much in the way that developers could specify colors, except the addition of orange as a new named color. So let's move on.&lt;/p&gt;&lt;p&gt;CSS Color Module Level 3&lt;/p&gt;&lt;p&gt;After CSS2 (which was one large spec for all of CSS), W3C switched to using smaller documents for different modules. The CSS Color Module Level 3 introduced a few things.&lt;/p&gt;&lt;p&gt;130 new named colors were added (with some overlaps like dimgray and dimgrey).&lt;/p&gt;&lt;p&gt;To specify an opacity for an element, rgba() was added. It takes a 4th parameter for an alpha channel: background: rgba(0, 0, 255, 0.5).&lt;/p&gt;&lt;p&gt;CSS Color 3 also added hsl() and hsla(), which use hue, saturation, and lightness. If you haven't seen this before, let's take a look at how this works.&lt;/p&gt;&lt;p&gt;Without invoking physics or just shouting the word color over and over, hue is pretty hard to define, but really easy to understand. It's where in that ROYGBIV wheel the color lands:&lt;/p&gt;&lt;p&gt;saturation tells how vibrant the color is:&lt;/p&gt;&lt;p&gt;lightness tells how light or dark the shade of the color is:&lt;/p&gt;&lt;p&gt;Putting these together, we get something like the following grid, with saturation on the x-axis and lightness on the y-axis (if we pick a single hue, like blue):&lt;/p&gt;&lt;p&gt;CSS Color Module Level 4&lt;/p&gt;&lt;p&gt;CSS Color Module Level 4 introduces several new and interesting things.&lt;/p&gt;&lt;p&gt;For starters, rgb() and hsl() syntax has been updated so that they no longer use commas and can optionally provide an alpha value after a forward slash: background: rgb(0 0 255 / 50%).&lt;/p&gt;&lt;p&gt;Hex codes also support alpha channels with 4 digit and 8 digit hex codes: #0000ff80.&lt;/p&gt;&lt;p&gt;As an alternative to specifying color via rgb() or hsl(), there are 5 additional color functions introduced: hwb(), lab(), lch(), oklab(), oklch().&lt;/p&gt;&lt;p&gt;The hwb() functional notation expresses a given color according to its hue, whiteness, and blackness. Hue is the same as the hue used in hsl(). The whiteness and blackness refer to how much white or black get mixed in.&lt;/p&gt;&lt;p&gt;For example, we can look at the square below and see how adding whiteness or blackness changes the color, with blackness on the x-axis and whiteness on the y-axis (again picking a single hue).&lt;/p&gt;&lt;p&gt;The last 4 ( lab(), lch(), oklab(), and oklch() ) are similar to hsl(), but better map to human perception of lightness (versus using the same scales for all hues like in hsl()). These aren't available in all browsers yet, but will be worth checking out (especially when CSS Color Module Level 5 brings native relative colors to CSS).&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>deck.</title>
    <link href="https://ari.blumenthal.dev/!/1/-5/deck"/>
    <id>https://ari.blumenthal.dev/!/1/-5/deck</id>
    <updated>2023-01-19T12:34:56Z</updated>
    <content type="html">&lt;p&gt;With a nearly 3 month old at home, portable pausable gaming has allowed me to relax during my downtime when the little guy naps or feeds, but still lets me jump in on a moment's notice. After a couple of months doing this on the switch (with games like pokemon scarlet and monster sanctuary) or on my phone with board game arena, I decided to unlock my steam library and pick up a deck.&lt;/p&gt;&lt;p&gt;And I enjoy using it immensely! The biggest technical issue I've encountered involves the screen not turning back on after sleeping, but with its short boot times, that issue hasn't bothered me too much.&lt;/p&gt;&lt;p&gt;So far, I've played a few games on it. I tried out Desk Job, replayed some Hades and Cozy Grove, delved into the newer acclaimed Vampire Survivors, and took my Civ VI turns in my play by cloud games with friends.&lt;/p&gt;&lt;p&gt;I even got ff14 working on it to catch up on the 6.3 main story! While reluctant to move from M+KB to controller gaming for an MMO, I've picked it up quicker than I thought I would, and actually prefer it for a few things already. Maybe not for extreme trials, but I'm mostly doing solo content anyway right now (so I can pause whenever I need to).&lt;/p&gt;&lt;p&gt;Not sure what I'll play next, but studios have packed February with new games up my alley. Hogwarts Legacy comes out on Feb 10, Theatrhythm Final Bar Line on Feb 16, and Octopath Traveler 2 on Feb 24. And in the latest Friday Facts, Twinsen announced controller support for Factorio is on its way, so I've got that to look forward to at some point, as well.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>roze.</title>
    <link href="https://ari.blumenthal.dev/!/2/-5/roze"/>
    <id>https://ari.blumenthal.dev/!/2/-5/roze</id>
    <updated>2023-01-10T12:34:56Z</updated>
    <content type="html">&lt;p&gt;By creating a planetary network, mankind on Planet now has the ability to share information at light-speed. But by creating a single such network, each faction has brought themselves closer to discovery as well. At the speed of light, we will catch your information, tag it like an animal in the wild, and release it unharmed-if such should serve our purposes. -- Datatech Sinder Roze "The Alpha Codex"&lt;/p&gt;&lt;p&gt;Over the pandemic, I've played a few asynchronous games of Civ 6 with friends, using discord to keep track of whose turn it is. We wanted a way to automate @mention'ing the next player, so we looked around.&lt;/p&gt;&lt;p&gt;There are a few github repos that have this functionality that you can clone and run with, and there is an often cited reddit post that explains how to set up IFTTT for this, but there wasn't an easy way to add a bot to your server and have it "just work".&lt;/p&gt;&lt;p&gt;Until now!&lt;/p&gt;&lt;p&gt;Introducing, roze.run, the self-proclaimed "premier way to get turn notifications in Discord for Sid Meier's Civilization VI". This was a fun weekend project, in that there are only a few moving parts, but it gets the job done! Well mostly, Civ's webhook system has a bunch of issues that can actually make it kinda flaky, but under certain circumstances it works well.&lt;/p&gt;&lt;p&gt;This project is named after Datatech Sinder Roze from the Alien Crossfire expansion of one of my favorite games of all time: Sid Meier's Alpha Centauri. As an aside, if you like 4x games and haven't played it, do yourself a favor, close this blog, and buy it now. It is often on sale on gog and at time of writing it is only $1.49. I've easily spent hundreds of hours over the last two decades on this one game.&lt;/p&gt;&lt;p&gt;roze's site above has more details and her source is available on github in the zkhr/roze repo.&lt;/p&gt;</content>
  </entry>
</feed>